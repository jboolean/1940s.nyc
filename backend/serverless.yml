service: fourtiesnyc
package:
  individually: false
  patterns:
    - 'certs/**'
    - 'tippecanoe-layer.zip'

provider:
  name: aws
  runtime: nodejs20.x
  stage: production
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 
            - s3:*
          Resource: "*"
  environment:
    STAGE: ${sls:stage}
    DB_HOST: ${ssm:/${self:service}-${sls:stage}-db-host}
    DB_PORT: ${ssm:/${self:service}-${sls:stage}-db-port}
    DB_USERNAME: ${ssm:/${self:service}-${sls:stage}-db-username}
    DB_PASSWORD: ${ssm:/${self:service}-${sls:stage}-db-password}
    DB_DATABASE: ${ssm:/${self:service}-${sls:stage}-db-database}
    STRIPE_SK: ${ssm:/${self:service}-${sls:stage}-stripe-sk}
    RECAPTCHA_SK: ${ssm:/${self:service}-${sls:stage}-recaptcha-sk}
    POSTMARK_TOKEN: ${ssm:/${self:service}-${sls:stage}-postmark-token}
    POSTMARK_SANDBOX_TOKEN: ${ssm:/${self:service}-${sls:stage}-postmark-sandbox-token}
    FRONTEND_BASE_URL: ${ssm:/${self:service}-${sls:stage}-frontend-base-url}
    JWT_SECRET: ${ssm:/${self:service}-${sls:stage}-jwt-secret}
    MODERATORS_TO_EMAIL: ${ssm:/${self:service}-${sls:stage}-moderators-to-email}
    MERCH_REVIEWER_EMAILS: ${ssm:/${self:service}-${sls:stage}-merch-reviewer-emails}
    MAPBOX_SK: ${ssm:/${self:service}-${sls:stage}-mapbox-sk}
    OPENAI_SK: ${ssm:/${self:service}-${sls:stage}-openai-sk}
    RAPIDAPI_API_KEY: ${ssm:/${self:service}-${sls:stage}-rapidapi-api-key}
    PRINTFUL_SK: ${ssm:/${self:service}-${sls:stage}-printful-sk}
plugins:
  - serverless-plugin-select
  - serverless-webpack
  - serverless-domain-manager
  - serverless-offline

layers:
  tippecanoe:
    package:
      artifact: tippecanoe-layer.zip
    name: tippecanoe-layer
    description: felt/tippecanoe

functions:
  app:
    handler: appHandler.handler
    timeout: 20
    events: 
      - http:
          path: /{proxy+}
          method: ANY
  convertImage:
    stages:
      - production
    handler: convertImage.handler
    memorySize: 2048
    timeout: 30
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - prefix: originals/
          existing: true
  deleteImage:
    stages:
      - production
    handler: convertImage.deletionHandler
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectRemoved:*
          rules:
            - prefix: originals/
          existing: true
  checkStaleStories:
    stages:
      - production
    handler: checkStaleStories.handler
    events:
      - schedule: cron(30 11 * * ? *)
  checkMerchQueue:
    stages:
      - production
    handler: checkMerchQueue.handler
    events:
      - schedule: cron(30 11 * * ? *)
  syncMap:
    stages:
      - production
    handler: syncMap.handler
    events:
      - schedule: cron(0 12 * * ? *)
    timeout: 900
  syncMapSelfHosted:
    stages:
      - production
      - staging
    handler: syncMapSelfHosted.handler
    events:
      - schedule: cron(10 12 * * ? *)
    timeout: 900
    layers:
      - Ref: TippecanoeLambdaLayer
  generateStoryTitles:
    stages:
      - production
    handler: generateStoryTitles.handler
    events:
      - schedule: rate(5 minutes)
    timeout: 900
  sendEmailCampaigns:
    stages:
      - production
    handler: sendEmailCampaigns.handler
    events:
      - schedule: rate(1 minute)
    timeout: 900
  renderMerchPrintfiles:
    handler: renderMerchPrintfiles.handler
    events:
      - schedule: rate(5 minutes)
    timeout: 120
    layers:
      - arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:50
    memorySize: 2048
  registerPrintfulWebhooks:
    handler: registerPrintfulWebhooks.handler
    # Invoked manually
custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules:
      forceExclude:
        - '@aws-sdk/client-s3'
        - '@sparticuz/chromium'
        - 'puppeteer-core'
        - 'sharp'
        - 'aws-sdk'
        - '@swc/core'
        - 'typescript'
        - 'ts-loader'
        - 'webpack'
        - 'webpack-node-externals'
    packager: 'npm'
  bucket: fourties-photos
  domain:
    production: api.1940s.nyc
    staging: api.staging.1940s.nyc
    dev: dev.1940s.nyc
  domainEnabled:
    production: true
    staging: true
    dev: false
  customDomain:
    enabled: ${self:custom.domainEnabled.${sls:stage}}
    domainName: ${self:custom.domain.${sls:stage}}
    basePath: ''
    stage: ${sls:stage}
    createRoute53Record: true
