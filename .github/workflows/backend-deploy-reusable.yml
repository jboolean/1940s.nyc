name: backend-deploy-reusable
on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
    
defaults:
  run:
    shell: bash
    working-directory: backend
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: Generate routes
        run: npm run routes
      - name: Generate Printful API
        run: npm run generate-printful-api
      - name: Lint
        run: npm run lint:strict
      - name: Types
        run: npm run types
      - name: Package Service (Dry Run)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        run: npx serverless package --stage ${{ inputs.stage }}
      - name: Show Package Sizes
        run: |
          echo "üì¶ Lambda Package Sizes:"
          if [ -d ".serverless" ]; then
            ls -lh .serverless/*.zip 2>/dev/null || echo "No zip files found"
            echo ""
            echo "üìä Package Details:"
            for zip in .serverless/*.zip; do
              if [ -f "$zip" ]; then
                echo "üóúÔ∏è  $(basename "$zip"):"
                echo "   Size: $(du -h "$zip" | cut -f1)"
                echo "   Contents:"
                unzip -l "$zip" | head -20
                echo "   ..."
                echo ""
              fi
            done
          else
            echo "No .serverless directory found"
          fi
      - name: Upload Bundle Analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis-${{ inputs.stage }}
          path: |
            backend/bundle-report.html
            backend/bundle-stats.json
            backend/.serverless/
          retention-days: 7
        if: always()
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          STAGE: ${{ inputs.stage }}
        run: npm run deploy
      - name: Register Printful webhooks
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          STAGE: ${{ inputs.stage }}
        run: npx serverless invoke -f registerPrintfulWebhooks --stage ${{ inputs.stage }}